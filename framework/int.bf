[
Operations on word-sized integers (works on both signed and unsigned unless otherwise specified

use "word.bf"
use "helpers/test_helpers.bf"
]

adds two words; needs an entire word of free space and does not touch any of the padding
add{
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0
    >>>[>>>>>>>>>+<<<<<<<<<-]
    = A0 A1 A2 `0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 0 0
    >>>>>>[>>>>+<<<<-]>>>
    = A0 A1 A2 0 | 0 0 | B0 B1 B2 0 | 0 0 | `A3 B3 0 0
    carry_sum{
        sums D Z and carry; carry should only be 1 or zero; leaves carry 1 if overflow happened
        = `D Z 0 carry
        >>>
        = D Z 0 `carry
        first increment D if carry is 1 (must set carry if this causes overflow)
        [
            carry is 1
            = D Z 0 `!0
            <<<+
            = `Dinc Z 0 !0
            [
                Dinc is non zero
                = `Dinc Z 0 !0
                [>>+<<-]>>>[-]<<<
                = `0 Z Dinc 0
            ]
            = `0 Z Dinc carry
            >>[<<+>>-]>[<+>-]
            = Dinc Z carry `0
        ]
        = Dinc Z carry `0
        <[>+<-]<
        = Dinc `Z 0 carry
        next add Z to D (must set carry if this causes overflow)
        [
            = Dinc `Z 0 carry
            >>+<<<+
            = `R Z 0 carry_inc
            [
                [>>+<<-]
                = `0 Z R carry_inc
                >>>-<<<
                = `0 Z R carry
            ]
            = `0 Z R carry
            >>[<<+>>-]<
            = R `Z 0 carry
            -
            = R `Zdec 0 carry
        ]<
        R now holds result
        = `R 0 0 carry
    }
    = A0 A1 A2 0 | 0 0 | B0 B1 B2 0 | 0 0 | `C3 0 0 carry3
    [<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<
    = A0 A1 `A2 C3 | 0 0 | B0 B1 B2 0 | 0 0 | 0 0 0 carry3
    [>>>>>>>>>>+<<<<<<<<<<-]>>>>>>
    = A0 A1 0 C3 | 0 0 | B0 B1 `B2 0 | 0 0 | A2 0 0 carry3
    [>>>>>+<<<<<-]>>>>
    = A0 A1 0 C3 | 0 0 | B0 B1 0 0 | 0 0 | `A2 B2 0 carry3
    carry_sum{
        >>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>
        [<<+>>-]<-]<
    }
    = A0 A1 0 C3 | 0 0 | B0 B1 0 0 | 0 0 | `C2 0 0 carry2
    [<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<
    = A0 `A1 C2 C3 | 0 0 | B0 B1 0 0 | 0 0 | 0 0 0 carry2
    [>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>
    = A0 0 C2 C3 | 0 0 | B0 `B1 0 0 | 0 0 | A1 0 0 carry2
    [>>>>>>+<<<<<<-]>>>>>
    = A0 0 C2 C3 | 0 0 | B0 0 0 0 | 0 0 | `A1 B1 0 carry2
    carry_sum{
        >>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>
        [<<+>>-]<-]<
    }
    = A0 0 C2 C3 | 0 0 | B0 0 0 0 | 0 0 | `C1 0 0 carry3
    [<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<
    = `A0 C1 C2 C3 | 0 0 | B0 0 0 0 | 0 0 | 0 0 0 carry2
    [>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>
    = 0 C1 C2 C3 | 0 0 | `B0 0 0 0 | 0 0 | A0 0 0 carry2
    [>>>>>>>+<<<<<<<-]>>>>>>
    = 0 C1 C2 C3 | 0 0 | 0 0 0 0 | 0 0 | `A0 B0 0 carry2
    carry_sum{
        >>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>
        [<<+>>-]<-]<
    }
    = 0 C1 C2 C3 | 0 0 | 0 0 0 0 | 0 0 | `C0 0 0 carry4
    >>>[-]<<<
    = 0 C1 C2 C3 | 0 0 | 0 0 0 0 | 0 0 | `C0 0 0 0
    [<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<
    = `C0 C1 C2 C3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can add 0 plus 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 1 plus 0
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 0 plus 1
>>>>>>>>>+<<<<<<<<<
= `0 0 0 0 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 1 plus 1
>>>+>>>>>>+<<<<<<<<<
= `0 0 0 1 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 255 plus 1
>>>->>>>>>+<<<<<<<<<
= `0 0 0 255 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 1 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 254 plus 5
>>>->>>>>>++<<<<<<<<<
= `0 0 0 255 | 0 0 | 0 0 0 2 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 0 1 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can 2042 plus 262156 = 264198
>>+++++++>------>>>>++++>>++++++++++++<<<<<<<<<
= `0 0 7 250 | 0 0 | 0 4 0 12 | 0 0 | 0 0 0 0
add{
    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
    <<<<<<<
}
= `0 4 8 6 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

subtracts the second word from the first word; does not touch the padding
sub{
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0
    >>>>>> >>>>>> >>>
    we're gonna loop through 4 cells
    ++++
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 `4
    [ for each cell
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 carry `i
        move A3 closer
        <<<<<< <<<<<< [>>>>>> >>> + <<< <<<<<< -] >>>>>> >>>>>
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 `carry i
        move carry so we can put the new carry in it's place
        [<+>-]<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `carry 0 i
        [ if carry subtract 1 from A3 (and make new carry)
            [-]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `0 0 i
            if A3 is 0 set carry
            >+<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 1 i
            [ if A3 is nonzero clear carry
                >>-<<[>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 0 i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            >[<+>-]<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry i
            subtract 1 from A3 for the carry we had previously (may overflow)
            ->
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_dec `0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_dec `0 _carry i
        subtract B3 from A3
        <<<<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3 0 carry i
        [ for every 1 in B3 subtract 1 from A3 setting carry when needed
            set carry if A3 is 0
            >>>>>
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 `carry i
            +<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry_inc i
            [ if A3 is nonzero
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry_inc i
                >>-<<
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 !carry_inc i
                [>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            >[<+>-]<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry i
            decrement A3 (may overflow)
            -<<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3_dec 0 carry i
            decrement B3
            -
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3_dec | 0 0 | A3_dec 0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `0 | 0 0 | A3 0 carry i
        right shift A and B
        <<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = A0 A1 A2 0 | 0 0 | `0 B0 B1 B2 | 0 0 | A3 0 carry i
        <<<<<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = `0 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | A3 0 carry i
        put A3 at the start of A to make A a cycle
        >>>>>> >>>>>> [<<<<<< <<<<<< + >>>>>> >>>>>> -]
        = A3 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | `0 0 carry i
        >>>-
        = _A3 _A0 _A1 _A2 | 0 0 | 0 _B0 _B1 _B2 | 0 0 | 0 0 carry `i_dec
    ]
    = ~
    = A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 carry `0
    <[-]<< <<<<<< <<<<<<
    = `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}

= ~

TEST 0 sub 0 = 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 772 sub 0 = 772
>>+++>++++<<<
= `0 0 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 5 sub 2 = 3
>>>+++++>>> >>>++<<< <<<<<<
= `0 0 0 5 | 0 0 | 0 0 0 2 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 33947903 sub 524548 = 33423355
++>++++++>>->>> >++++++++>+>++++<<< <<<<<<
= `2 6 0 255 | 0 0 | 0 8 1 4 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `1 253 255 251 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

increments the word by 1
does not touch padding and only uses first two cells of right word
add_1{
    = `A0 A1 A2 A3 | p0 p1 | 0 0
    move A3
    >>>[>>>+<<<-]>>>
    = A0 A1 A2 0 | p0 p1 | `A3 0
    increment A3
    +
    = A0 A1 A2 0 | p0 p1 | `A3_inc 0
    move back and make a copy
    [<<<+>>>>+<-]
    = A0 A1 A2 A3_inc | p0 p1 | `0 A3_inc
    check_if_zero{
        +>
        = A0 A1 A2 A3_inc | p0 p1 | 1 `A3_inc
        if the value is nonzero clear the cell to the left
        [
            <[-]
            >[-]
        ]<
        = A0 A1 A2 A3_inc | p0 p1 | `was_zero 0
    }
    [
        A3_inc is zero
        [-]
        = A0 A1 A2 A3 | p0 p1 | `0 0
        move A2
        <<<<[>>>>+<<<<-]>>>>
        = A0 A1 0 A3_inc | p0 p1 | `A2 0
        +
        = A0 A1 0 A3_inc | p0 p1 | `A2_inc 0
        [<<<<+>>>>>+<-]
        = A0 A1 A2_inc A3_inc | p0 p1 | `0 A2_inc
        check_if_zero{ +>[<[-]>[-]]< }
        = A0 A1 A2_inc A3_inc | p0 p1 | `was_zero 0
        [
            A2 is zero
            [-]
            = A0 A1 A2 A3 | p0 p1 | `0 0
            copy A1
            <<<<<[>>>>>+<<<<<-]>>>>>
            = A0 0 A2_inc A3_inc | p0 p1 | `A1 0
            +
            = A0 0 A2_inc A3_inc | p0 p1 | `A1_inc 0
            [<<<<<+>>>>>>+<-]
            = A0 A1_inc A2_inc A3_inc | p0 p1 | `0 A1_inc
            check_if_zero{ +>[<[-]>[-]]< }
            = A0 A1_inc A2_inc A3_inc | p0 p1 | `was_zero 0
            [
                A1 is zero
                [-]
                = A0 A1_inc A2_inc A3_inc | p0 p1 | `0 0 0 0
                just increment A0 don't care about turnover
                <<<<<<+
                = `A0_inc A1_inc A2_inc A3_inc | p0 p1 | 0 0 0 0
                >>>>>>
                = A0_inc A1_inc A2_inc A3_inc | p0 p1 | `0 0 0 0
            ]
        ]
    ]
    <<<<<<
    = `B0 B1 B2 B3 | p0 p1 | 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can increment 0
= `0 0 0 0 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 1
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 254
>>>--<<<
= `0 0 0 254 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 255
>>>-<<<
= `0 0 0 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 1 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 65535
>>->-<<<
= `0 0 255 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 1 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 4278190080
->->->-<<<
= `255 255 255 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

decrements the word by 1
does not touch padding and only uses first two cells of right word
sub_1{
    = `A0 A1 A2 A3 | p0 p1 | 0 0
    copy A3
    >>>[>>>+>+<<<<-]>>>
    = A0 A1 A2 0 | p0 p1 | `A3 A3
    decrement A3
    -
    = A0 A1 A2 0 | p0 p1 | `A3_dec A3
    [<<<+>>>-]
    = A0 A1 A2 A3_dec | p0 p1 | `0 A3
    check_if_zero{ +>[<[-]>[-]]< }
    = A0 A1 A2 A3_dec | p0 p1 | `A3_was_zero 0
    [
        A3 was zero
        [-]
        = A0 A1 A2 A3 | p0 p1 | `0 0
        copy A2
        <<<<[>>>>+>+<<<<<-]>>>>
        = A0 A1 0 A3_dec | p0 p1 | `A2 A2
        -
        = A0 A1 0 A3_dec | p0 p1 | `A2_dec A2
        [<<<<+>>>>-]
        = A0 A1 A2_dec A3_dec | p0 p1 | `0 A2
        check_if_zero{ +>[<[-]>[-]]< }
        = A0 A1 A2_dec A3_dec | p0 p1 | `A2_was_zero 0
        [
            A2 was zero
            [-]
            = A0 A1 A2 A3 | p0 p1 | `0 0
            copy A1
            <<<<<[>>>>>+>+<<<<<<-]>>>>>
            = A0 0 A2_dec A3_dec | p0 p1 | `A1 A1
            -
            = A0 0 A2_dec A3_dec | p0 p1 | `A1_dec A1
            [<<<<<+>>>>>-]
            = A0 A1_dec A2_dec A3_dec | p0 p1 | `0 A1
            check_if_zero{ +>[<[-]>[-]]< }
            = A0 A1_dec A2_dec A3_dec | p0 p1 | `A1_was_zero 0
            [
                A1 was zero
                [-]
                = A0 A1_dec A2_dec A3_dec | p0 p1 | `0 0
                <<<<<<
                = `A0 A1_dec A2_dec A3_dec | p0 p1 | 0 0
                -
                = `A0_dec A1_dec A2_dec A3_dec | p0 p1 | 0 0
                >>>>>>
                = A0_dec A1_dec A2_dec A3_dec | p0 p1 | `0 0
            ]
        ]
    ]
    <<<<<<
    = `B0 B1 B2 B3 | p0 p1 | 0 turned_over
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can decrement 1
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 3
>>>+++<<<
= `0 0 0 3 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 256
>>+<<
= `0 0 1 0 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 4294967295
->->->-<<<
= `255 255 255 255 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `255 255 255 254 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 0
= `0 0 0 0 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `255 255 255 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]>>>>[-]<<<<<<<

multiplies two unsigned 1 cell numbers resulting in a 2 cell number with no posibility of overflow
uses two cells of the next word and does not use the padding
mul_chars_into_short{
    = `A B 0 0 | p0 p1 | 0 0
    stash B and A in the next word for safe keeping
    [>>>>>>+<<<<<<-]>
    [>>>>>>+<<<<<<-]>>>>>>
    = 0 0 0 0 | p0 p1 | A `B
    [ for each 1 in B add A to the accumulator
        = X0 X1 0 0 | p0 p1 | A `B
        copy A
        <[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>
        = X0 X1 0 `A | p0 p1 | A B
        [ for each 1 in A add 1 with potential carry to X
            = X0 X1 0 `A_remaining | p0 p1 | A B
            increment X1 and X0
            <<+<+>
            = X0_inc `X1_inc 0 A_remaining | p0 p1 | A B
            decrement X0 if X1 is not now 0
            [<->[>+<-]]
            = X0 `0 X1_inc A_remaining | p0 p1 | A B
            put X1 back and decrement A
            >[<+>-]>-
            = X0 X1 0 `A_dec | p0 p1 | A B
        ]
        = X0 X1 0 `0 | p0 p1 | A B
        decrement B
        >>>>-
        = X0 X1 0 0 | p0 p1 | A `B_dec
    ]
    = X0 X1 0 0 | p0 p1 | A `0
    <[-]<<<<<<
    = `X0 X1 0 0 | p0 p1 | 0 0
}

= ~

TEST: 2 * 3 = 6
++>+++<
= `2 3 0 0 | 0 0 | 0 0
mul_chars_into_short{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
    ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
}
= `0 6 0 0 | 0 0 | 0 0
[-]>[-]<

TEST: 243 * 6 = 1458
---------- --- > ++++++ <
= `243 6 0 0 | 0 0 | 0 0
mul_chars_into_short{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
    ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
}
= `5 178 0 0 | 0 0 | 0 0
[-]>[-]<

multiply two words
works on both signed and unsigned ints; does not touch the padding
mul{
    we unfortunately need 6 (yes 6!) words including the two input words:
    * accumulator
    * 2 for the add
    * one to keep track of things
    * A
    * B
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    set up counter
    >>>>>> >>>>>> >>>>>> >>>>>> >>>>>> ++++
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `4 0 0 0
    [ for Ac in 4 to 0
        start by decrementing so Ac is 0 on the last iteration
        -
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac_dec 0 0 0
        >++++<
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 4 0 0
        Set Bc to 4 minus Ac
        [>->+<<-]>>[<<+>>-]<<
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac Bc 0 0
        <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
        [>>>>>> >>>>>> >>>>>> >>>>>> >>>>>> >> + << <<<<<< <<<<<< <<<<<< <<<<<< <<<<<< -]
        >>>>>> >>>>>> >>>>>> >>>>>> >>>>>> >
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc A0 0
        [ for Bc in Ac to 0
            start by decrementing so Bc is 0 on the last iteration
            -
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc_dec A0 0
            copy B
            < <<<<<< <<<<<< <<<<<< <<<<<<
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]
            = 0 A1 A2 A3 | 0 0 | 0 0 0 `0 | 0 0 | R0 R1 R2 R3 | 0 0 | B0 B1 B2 B3 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            >>> >>>>>>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `0 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            copy Bc
            >>> >>>>>> > [>>+<<< <<<<<< <<< + >>> >>>>>> > -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 Bc | 0 0 | B0 B1 B2 B3 | 0 0 | Ac `0 A0 Bc
            >> [<<+>>-] <<< <<<<<< <<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `Bc | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            [ for every 1 in Bc
                >>>
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 _Bc | 0 0 | `B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
                shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 _Bc | 0 0 | `0 B0 B1 B2 | 0 0 | Ac Bc A0 0
                <<<-
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `Bc_dec | 0 0 | 0 B0 B1 B2 | 0 0 | Ac Bc A0 0
                = ~
            ]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `0 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            clear out all but the right most digit of B
            >>>[-]>[-]>[-]>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 `B3 | 0 0 | Ac Bc A0 0
            [<<< <<<<<< + >>>>>> >>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 0 0 0 | 0 0 | 0 0 0 `0 | 0 0 | Ac Bc A0 0
            copy A0
            >>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc `A0 0
            [>+<<< <<<<<< <<<<< + >>>>> >>>>>> >> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 A0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc `0 A0
            >[<+>-]<<< <<<<<< <<<<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `B3 A0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            tests time out here lol
            = ~
            mul_chars_into_short{
                [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
                ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
            }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X2 X3 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
            word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `0 0 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            >>>>>> >>>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | `Ac Bc A0 0
            copy Ac and Bc into the same cell
            [<<< + <<< + >>>>>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | Ac 0 0 Ac | 0 0 | `0 Bc A0 0
            <<<[>>>+<<<-]>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | Ac 0 0 0 | 0 0 | Ac `Bc A0 0
            [<<<< + <<< + >>>>>> > -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | c_sum 0 0 Bc | 0 0 | Ac `0 A0 0
            <<<<[>>>>+<<<<-]<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | `c_sum 0 0 0 | 0 0 | Ac Bc A0 0
            [ for every 1 in c_sum
                <<<<<<
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X0 X1 X2 X3 | 0 0 | c_sum 0 0 0 | 0 0 | Ac Bc A0 0
                shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X1 X2 X3 0 | 0 0 | c_sum 0 0 0 | 0 0 | Ac Bc A0 0
                >>>>>>-
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | X1 X2 X3 0 | 0 0 | `c_sum_dec 0 0 0 | 0 0 | Ac Bc A0 0
                = ~
            ]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | X0 X1 X2 X3 | 0 0 | `0 0 0 0 | 0 0 | Ac Bc A0 0
            <<<<<< <<<<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | `R0 R1 R2 R3 | 0 0 | X0 X1 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            add{
                >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
                >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
                <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
                ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
                <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
                >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
                <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
                >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
                >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
                <<<<<<<
            }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | `_R0 _R1 _R2 _R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            >>>>>> >>>>>> >>>>>> >
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc A0 0
        ]
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `0 A0 0
        >[-]<<
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 0 0 0
        <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
        = `0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac 0 0 0
        shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
        = `A1 A2 A3 0 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac 0 0 0
        >>>>>> >>>>>> >>>>>> >>>>>> >>>>>>
        = _A1 _A2 _A3 0 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 0 0 0
        Ac gets decremented at the start of the loop
    ]
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0 0 0 0
    <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    [-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>
    = 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    = `R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 0 * 0 = 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>
    >>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[
    >>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<
    <<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-
    ]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>
    >>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<
    <+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>
    >>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>
    [<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<
    +>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>]>[
    -]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>>>>>>>>>>>>>>
    >>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[<
    <<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 1 * 1 = 1
>>>+>>>>>>+<<<<<< <<<
= `0 0 0 1 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>
    >>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[
    >>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<
    <<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-
    ]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>
    >>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<
    <+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>
    >>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>
    [<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<
    +>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>]>[
    -]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>>>>>>>>>>>>>>
    >>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[<
    <<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 5 * 8 = 40
>>> +++++ >>>>>> ++++++++ <<<<<< <<<
= `0 0 0 5 | 0 0 | 0 0 0 8 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>
    >>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[
    >>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<
    <<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-
    ]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>
    >>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<
    <+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>
    >>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>
    [<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<
    +>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>]>[
    -]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>>>>>>>>>>>>>>
    >>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[<
    <<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<
}
= `0 0 0 40 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 250 * 5 = 1250
>>> ------ >>>>>> +++++ <<<<<< <<<
= `0 0 0 250 | 0 0 | 0 0 0 5 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>
    >>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[
    >>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<
    <<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-
    ]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>
    >>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<
    <+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>
    >>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>
    [<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<
    +>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>]>[
    -]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>>>>>>>>>>>>>>
    >>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[<
    <<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<
}
= `0 0 4 226 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 67501824 * 4261478406 = 388233728
++++ > +++++ > - >>>> -- > + >> ++++++ <<<<<< <<<
= `4 5 255 0 | 0 0 | 254 1 0 6 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>
    >>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[
    >>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<
    <<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-
    ]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>
    >>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<
    <+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>
    >>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>
    [<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<
    +>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>]>[
    -]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>>>>>>>>>>>>>>
    >>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[<
    <<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<
}
= `23 35 250 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

= ~
>>>>>>

takes a base 10 ascii number of any length (with gaps for padding) terminated with a 0:
/= 0 * | `A B C D | 0 0 | E F 0 0
results in a signed word (interprets minus sign)
/= `A0 A1 A2 A3 | 0 0 | 0 0 0 0
if there is an error it results in `255 0 0 0` and a 1 in the first cell of the 2nd word
/= `255 0 0 0 | 0 0 | 1 0 0 0
parse_int{
    = 0 * | `A B C D | 0 0 | E F G H | 0 0 ~
    go to the end of used words
    [>>>>+>>]
    = W X Y Z | * * | `0 * * * | * * | * * * * | * * | * * * *
    if the start of the word is zero the rest should also be but make the tests happy
    >[-]>[-]>[-] >>> [-]>[-]>[-]>[-] >>> [-]>[-]>[-]>[-] <<<<<< <<<<<< <<<<<
    = W X Y Z | `* * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0
    make room by moving everything four words to the right
    [ for each used word
        = W X Y Z | `!0 * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0
        [-]<<<<
        = `W X Y Z | 0 * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0
        word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
        word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
        word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
        word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
        = continue * | 0 0 0 0 | 0 * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0 | * * | `W X Y Z
        <<<<<< <<<<<< <<<<<< <<<<<< <<
        = `continue * | 0 0 0 0 | 0 * | 0 0 0 0 | * * | 0 0 0 0 | * * | 0 0 0 0 | * * | W X Y Z
    ]
    = ~
    = `0 * | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A B C D | 0 0 | E F G H | 0 0 ~
    >>>>>> >>>>>> >>>>>> >>>>>> >>
    TODO: implement negative numbers here
    = 0 * | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A B C D | 0 0 | E F G H | 0 0 ~
    [ for each word
        [ for each char
            = 0 * | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A B C D | 0 0 | E F G H | 0 0 ~
            quick and dirty hack to multiply by 10: add self 10 times
            <<<<<< <<<<<< <<<<<< <<<<<<
            = 0 * | `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A B C D
            copy number
            word/copy_right{
                [>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>>+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<
                <<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-]<<<<
            }
            = 0 * | `A0 A1 A2 A3 | 0 0 | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A B C D
            move way off to the right out of the way of the add thats coming up
            >>>>>>
            word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
            word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
            <<<<<< <<<<<< <<
            = 0 * | A0 A1 A2 A3 | `0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
            add number to itself 9 times to multiply by 10
            +++++++++
            = 0 * | A0 A1 A2 A3 | `9 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
            [
                >> >>>>>> >>>>>>
                = 0 * | B0 B1 B2 B3 | * 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A0 A1 A2 A3 | 0 0 | A B C D
                word/copy_left{
                    [<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-
                    ]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>>
                }
                <<<<<<
                word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
                = 0 * | B0 B1 B2 B3 | * 0 | `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
                <<<<<<
                = 0 * | `B0 B1 B2 B3 | * 0 | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
                add{
                    >>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>
                    >-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<+>>>>>>>>>-]
                    <<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<<<+[[>>+<<-]>>>[-
                    ]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<
                    <+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>>+<<<<<<-]>>>>>>>
                    >[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<
                    <+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<<<<<<<<<<<<-]>>>>
                    >>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[
                    >>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>>>>>>>>>>>-]<<<<<
                    <<<<<<<
                }
                = 0 * | `C0 C1 C2 C3 | * 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
                >>>>-
                = 0 * | C0 C1 C2 C3 | `* 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D
            ]
            = 0 * | * * * * | `0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | A B C D | 0 0 | E F G H | 0 0 ~
            >> >>>>>> >>>>>>
            [-]>[-]>[-]>[-]>>>
            = 0 * | * * * * | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A B C D | 0 0 | E F G H | 0 0 ~
            subtract 48
            <<++++++[>>--------<<-]>>
            = 0 * | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A_val B C D | 0 0 | E F G H | 0 0 ~
            [ for each 1 in char
                increment the accumulator
                <<<<<< <<<<<< <<<<<< <<<<<<
                = 0 * | `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A_val B C D | 0 0 | E F G H | 0 0 ~
                add_1{
                    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
                    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
                    <<<<<+>>>>>>]]]<<<<<<
                }
                = 0 * | `A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | A_val B C D | 0 0 | E F G H | 0 0 ~
                >>>>>> >>>>>> >>>>>> >>>>>> -
                = 0 * | A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A_dec B C D | 0 0 | E F G H | 0 0 ~
                TODO: check if char is an invalid value
            ]
            = 0 * | A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0 B C D | 0 0 | E F G H | 0 0 ~
            advance cell
            >[<+>-]
            >[<+>-]
            >[<+>-]
            <<<
            = 0 * | A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `B C D 0 | 0 0 | E F G H | 0 0 ~
            = ~
        ]
        advance all words
        = 0 * | A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0 * * * | 0 0 | E F G H | 0 0 ~
        >[-]>[-]>[-]>>>
        = 0 * | A0_inc A1_inc A2_inc A3_inc | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `E F G H | 0 0 ~
        [ for each word
            = 0 0 0 0 | 0 0 | `A B C D | 0 0 | E F G H | 0 0 ~
            word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
            = `A B C D | 0 0 | 0 0 0 0 | 0 0 | E F G H | 0 0 ~
            >>>>>> >>>>>>
            = A B C D | 0 0 | 0 0 0 0 | 0 0 | `E F G H | 0 0 ~
            = ~
        ]
        go home
        = W X Y Z | 0 0 | 0 0 0 0 | 0 0 | `0
        <<<<<< <<<<<<
        = ~ `W X Y Z | 0 0 | 0 0 0 0 | 0 0 | 0
        [<<<<<<]
        = ~
        = 0 * | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0 0 0 0 | 0 0 | A B C D | 0 0 | E F G H | 0 0 ~
        >>>>>>
        = 0 * | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `A B C D | 0 0 | E F G H | 0 0 ~
    ]
    = 0 * | A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0
    <<<<<< <<<<<< <<<<<< <<<<<<
    = 0 * | `A0 A1 A2 A3 | 0 0 | 0 0 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
>>

TEST: can parse empty
= 0 * | `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 * | `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can parse 0
++++++++++++++++
++++++++++++++++
++++++++++++++++
= 0 * | `48 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 * | `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can parse 1
++++++++++++++++
++++++++++++++++
++++++++++++++++
+
= 0 * | `49 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 * | `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can parse 7
++++++++++++++++
++++++++++++++++
++++++++++++++++
+++++++
= 0 * | `55 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 * | `0 0 0 7 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can parse 10
++++++++++++++++
++++++++++++++++
++++++++++++++++
+>
++++++++++++++++
++++++++++++++++
++++++++++++++++
<
= 0 * | `49 48 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 * | `0 0 0 10 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can parse 403833685
++++++++++++++++
++++++++++++++++
++++++++++++++++
++++>
++++++++++++++++
++++++++++++++++
++++++++++++++++
>
++++++++++++++++
++++++++++++++++
++++++++++++++++
+++>
++++++++++++++++
++++++++++++++++
++++++++++++++++
++++++++>>>
++++++++++++++++
++++++++++++++++
++++++++++++++++
+++>
++++++++++++++++
++++++++++++++++
++++++++++++++++
+++>
++++++++++++++++
++++++++++++++++
++++++++++++++++
++++++>
++++++++++++++++
++++++++++++++++
++++++++++++++++
++++++++>>>
++++++++++++++++
++++++++++++++++
++++++++++++++++
+++++
<<<<<< <<<<<<
= 0 0 | `52 48 51 56 | 0 0 | 51 51 54 56 | 0 0 | 53 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
parse_int{
    [>>>>+>>]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]<<<<<<<<<<<<<<<<<[[-]<<
    <<[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+
    <<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[
    >>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<<<<<<<<<<<<<]>>>>>>>>>>>
    >>>>>>>>>>>>>>>[[<<<<<<<<<<<<<<<<<<<<<<<<[>>>>+>>+<<<<<<-]>>>>[<<<<+>>>>-]<<<[>>
    >+>>>+<<<<<<-]>>>[<<<+>>>-]<<[>>+>>>>+<<<<<<-]>>[<<+>>-]<[>+>>>>>+<<<<<<-]>[<+>-
    ]<<<<>>>>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>
    >[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<
    <<<<<+++++++++[>>>>>>>>>>>>>>[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[
    >>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+
    <<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]<<<<<<<<<<<<<<<>>>[>>>>>>>>>+<<<<<<<<<-]>>>>>>[>>>>+<<<<-]>>>>>>[<<<+[[>>+<<-]
    >>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<
    <<<<<+>>>>>>>>>-]<<<<<<<<<<[>>>>>>>>>>+<<<<<<<<<<-]>>>>>>[>>>>>+<<<<<-]>>>>>>>[<
    <<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>
    >-]<-]<[<<<<<<<<<<+>>>>>>>>>>-]<<<<<<<<<<<[>>>>>>>>>>>+<<<<<<<<<<<-]>>>>>>[>>>>>
    >+<<<<<<-]>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]>[<+>-]]<[>+<-]<[>>+<<<+[[>>
    +<<-]>>>-<<<]>>[<<+>>-]<-]<[<<<<<<<<<<<+>>>>>>>>>>>-]<<<<<<<<<<<<[>>>>>>>>>>>>+<
    <<<<<<<<<<<-]>>>>>>[>>>>>>>+<<<<<<<-]>>>>>>>>>[<<<+[[>>+<<-]>>>[-]<<<]>>[<<+>>-]
    >[<+>-]]<[>+<-]<[>>+<<<+[[>>+<<-]>>>-<<<]>>[<<+>>-]<-]<>>>[-]<<<[<<<<<<<<<<<<+>>
    >>>>>>>>>>-]<<<<<<<<<<<<>>>>-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>><<++++++[>>-------
    -<<-]>>[<<<<<<<<<<<<<<<<<<<<<<<<>>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<
    <<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<<<<<<+>>>>>>]]]<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>-]>
    [<+>-]>[<+>-]>[<+>-]<<<]>[-]>[-]>[-]>>>[[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<
    <+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<>>>>>>>>>>>>]<<<<<<<<<<<<[<<<<<<]>>>>>>]<<<<
    <<<<<<<<<<<<<<<<<<<<
}
= 0 0 | `24 18 3 85 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
