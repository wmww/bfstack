[
Operations on word-sized integers (works on both signed and unsigned unless otherwise specified

use "word.bf"
use "helpers/test_helpers.bf"
]

adds two words; needs an entire word of free space and does not touch any of the padding
add{
add_with_overflow{
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0
    >>>>>> >>>>>> >>>
    we're gonna loop through 4 cells
    ++++
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 `4
    [ for each cell
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 carry `i
        move A3 closer
        <<<<<< <<<<<< [>>>>>> >>> + <<< <<<<<< -] >>>>>> >>>>>
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 `carry i
        move carry so we can put the new carry in it's place
        [<+>-]<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `carry 0 i
        [ if carry add 1 to A3 (and make new carry)
            [-]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `0 0 i
            add 1 to A3 for the carry we had previously (may overflow)
            <+
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3_inc 0 0 i
            if A3 is 0 set carry
            >>+<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3_inc 0 1 i
            [ if A3 is nonzero clear carry
                >>-<<[>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3_inc 0 i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3_inc carry i
            >[<+>-]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_inc `0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_inc `0 _carry i
        add B3 to A3
        <<<<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3 0 carry i
        [ for every 1 in B3 add 1 to A3 setting carry when needed
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3 0 carry i
            increment A3 (may overflow)
            >>>+
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3_inc 0 carry i
            set carry if A3 is 0
            >>+<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3_inc 0 carry_inc i
            [ if A3 is nonzero
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry_inc i
                >>-<<
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 !carry_inc i
                [>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            >[<+>-]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `0 carry i
            decrement B3
            <<<<-
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3_dec | 0 0 | A3 0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `0 | 0 0 | A3 0 carry i
        right shift A and B
        <<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = A0 A1 A2 0 | 0 0 | `0 B0 B1 B2 | 0 0 | A3 0 carry i
        <<<<<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = `0 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | A3 0 carry i
        put A3 at the start of A to make A a cycle
        >>>>>> >>>>>> [<<<<<< <<<<<< + >>>>>> >>>>>> -]
        = A3 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | `0 0 carry i
        >>>-
        = _A3 _A0 _A1 _A2 | 0 0 | 0 _B0 _B1 _B2 | 0 0 | 0 0 carry `i_dec
    ]<
    = ~
    = A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 `carry 0
}add_with_overflow
    [-]<< <<<<<< <<<<<<
    = `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}add

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can add 0 plus 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 1 plus 0
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 0 plus 1
>>>>>>>>>+<<<<<<<<<
= `0 0 0 0 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 1 plus 1
>>>+>>>>>>+<<<<<<<<<
= `0 0 0 1 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 255 plus 1
>>>->>>>>>+<<<<<<<<<
= `0 0 0 255 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 1 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can add 254 plus 5
>>>->>>>>>++<<<<<<<<<
= `0 0 0 255 | 0 0 | 0 0 0 2 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 1 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: can 2042 plus 262156 = 264198
>>+++++++>------>>>>++++>>++++++++++++<<<<<<<<<
= `0 0 7 250 | 0 0 | 0 4 0 12 | 0 0 | 0 0 0 0
add{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
    +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 4 8 6 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

subtracts the second word from the first word; does not touch the padding
sub{
sub_with_overflow{
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0
    >>>>>> >>>>>> >>>
    we're gonna loop through 4 cells
    ++++
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 `4
    [ for each cell
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 carry `i
        move A3 closer
        <<<<<< <<<<<< [>>>>>> >>> + <<< <<<<<< -] >>>>>> >>>>>
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 `carry i
        move carry so we can put the new carry in it's place
        [<+>-]<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `carry 0 i
        [ if carry subtract 1 from A3 (and make new carry)
            [-]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 `0 0 i
            if A3 is 0 set carry
            >+<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 1 i
            [ if A3 is nonzero clear carry
                >>-<<[>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 0 i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            >[<+>-]<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry i
            subtract 1 from A3 for the carry we had previously (may overflow)
            ->
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_dec `0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3_dec `0 _carry i
        subtract B3 from A3
        <<<<
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3 0 carry i
        [ for every 1 in B3 subtract 1 from A3 setting carry when needed
            set carry if A3 is 0
            >>>>>
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | A3 0 `carry i
            +<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry_inc i
            [ if A3 is nonzero
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry_inc i
                >>-<<
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 !carry_inc i
                [>+<-]
                = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            ]
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `0 A3 carry i
            >[<+>-]<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 B3 | 0 0 | `A3 0 carry i
            decrement A3 (may overflow)
            -<<<
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3 | 0 0 | A3_dec 0 carry i
            decrement B3
            -
            = A0 A1 A2 0 | 0 0 | B0 B1 B2 `B3_dec | 0 0 | A3_dec 0 carry i
        ]
        = A0 A1 A2 0 | 0 0 | B0 B1 B2 `0 | 0 0 | A3 0 carry i
        right shift A and B
        <<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = A0 A1 A2 0 | 0 0 | `0 B0 B1 B2 | 0 0 | A3 0 carry i
        <<<<<<
        word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = `0 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | A3 0 carry i
        put A3 at the start of A to make A a cycle
        >>>>>> >>>>>> [<<<<<< <<<<<< + >>>>>> >>>>>> -]
        = A3 A0 A1 A2 | 0 0 | 0 B0 B1 B2 | 0 0 | `0 0 carry i
        >>>-
        = _A3 _A0 _A1 _A2 | 0 0 | 0 _B0 _B1 _B2 | 0 0 | 0 0 carry `i_dec
    ]<
    = ~
    = A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 `carry 0
}sub_with_overflow
    [-]<< <<<<<< <<<<<<
    = `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}sub

= ~

TEST 0 sub 0 = 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 772 sub 0 = 772
>>+++>++++<<<
= `0 0 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 5 sub 2 = 3
>>>+++++>>> >>>++<<< <<<<<<
= `0 0 0 5 | 0 0 | 0 0 0 2 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 33947903 sub 524548 = 33423355
++>++++++>>->>> >++++++++>+>++++<<< <<<<<<
= `2 6 0 255 | 0 0 | 0 8 1 4 | 0 0 | 0 0 0 0
sub{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `1 253 255 251 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST 5 sub_with_overflow 2 = 3 and no overflow
>>>+++++>>> >>>++<<< <<<<<<
= `0 0 0 5 | 0 0 | 0 0 0 2 | 0 0 | 0 0 0 0
sub_with_overflow{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<
}
= 0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 `0 0
[-]<< <<<<<< <<<<<<[-]>[-]>[-]>[-]<<<

TEST 2 sub_with_overflow 5 = 4294967293 and overflow
>>>++>>> >>>+++++<<< <<<<<<
= `0 0 0 2 | 0 0 | 0 0 0 5 | 0 0 | 0 0 0 0
sub_with_overflow{
    >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
    [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
    <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
    >>>>>-]>>>-]<
}
= 255 255 255 253 | 0 0 | 0 0 0 0 | 0 0 | 0 0 `1 0
[-]<< <<<<<< <<<<<<[-]>[-]>[-]>[-]<<<

increments the word by 1
does not touch padding and only uses first two cells of right word
add_1{
    = `A0 A1 A2 A3 | p0 p1 | 0 0
    move A3
    >>>[>>>+<<<-]>>>
    = A0 A1 A2 0 | p0 p1 | `A3 0
    increment A3
    +
    = A0 A1 A2 0 | p0 p1 | `A3_inc 0
    move back and make a copy
    [<<<+>>>>+<-]
    = A0 A1 A2 A3_inc | p0 p1 | `0 A3_inc
    check_if_zero{
        +>
        = A0 A1 A2 A3_inc | p0 p1 | 1 `A3_inc
        if the value is nonzero clear the cell to the left
        [
            <[-]
            >[-]
        ]<
        = A0 A1 A2 A3_inc | p0 p1 | `was_zero 0
    }
    [
        A3_inc is zero
        [-]
        = A0 A1 A2 A3 | p0 p1 | `0 0
        move A2
        <<<<[>>>>+<<<<-]>>>>
        = A0 A1 0 A3_inc | p0 p1 | `A2 0
        +
        = A0 A1 0 A3_inc | p0 p1 | `A2_inc 0
        [<<<<+>>>>>+<-]
        = A0 A1 A2_inc A3_inc | p0 p1 | `0 A2_inc
        check_if_zero{ +>[<[-]>[-]]< }
        = A0 A1 A2_inc A3_inc | p0 p1 | `was_zero 0
        [
            A2 is zero
            [-]
            = A0 A1 A2 A3 | p0 p1 | `0 0
            copy A1
            <<<<<[>>>>>+<<<<<-]>>>>>
            = A0 0 A2_inc A3_inc | p0 p1 | `A1 0
            +
            = A0 0 A2_inc A3_inc | p0 p1 | `A1_inc 0
            [<<<<<+>>>>>>+<-]
            = A0 A1_inc A2_inc A3_inc | p0 p1 | `0 A1_inc
            check_if_zero{ +>[<[-]>[-]]< }
            = A0 A1_inc A2_inc A3_inc | p0 p1 | `was_zero 0
            [
                A1 is zero
                [-]
                = A0 A1_inc A2_inc A3_inc | p0 p1 | `0 0 0 0
                just increment A0 don't care about turnover
                <<<<<<+
                = `A0_inc A1_inc A2_inc A3_inc | p0 p1 | 0 0 0 0
                >>>>>>
                = A0_inc A1_inc A2_inc A3_inc | p0 p1 | `0 0 0 0
            ]
        ]
    ]
    <<<<<<
    = `B0 B1 B2 B3 | p0 p1 | 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can increment 0
= `0 0 0 0 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 1
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 254
>>>--<<<
= `0 0 0 254 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 255
>>>-<<<
= `0 0 0 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 1 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 65535
>>->-<<<
= `0 0 255 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 1 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can increment 4278190080
->->->-<<<
= `255 255 255 255 | 0 0 | 0 0
add_1{
    >>>[>>>+<<<-]>>>+[<<<+>>>>+<-]+>[<[-]>[-]]<[[-]<<<<[>>>>+<<<<-]>>>>+[<<<<+>>>>>+
    <-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+<<<<<-]>>>>>+[<<<<<+>>>>>>+<-]+>[<[-]>[-]]<[[-]<
    <<<<<+>>>>>>]]]<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

decrements the word by 1
does not touch padding and only uses first two cells of right word
sub_1{
    = `A0 A1 A2 A3 | p0 p1 | 0 0
    copy A3
    >>>[>>>+>+<<<<-]>>>
    = A0 A1 A2 0 | p0 p1 | `A3 A3
    decrement A3
    -
    = A0 A1 A2 0 | p0 p1 | `A3_dec A3
    [<<<+>>>-]
    = A0 A1 A2 A3_dec | p0 p1 | `0 A3
    check_if_zero{ +>[<[-]>[-]]< }
    = A0 A1 A2 A3_dec | p0 p1 | `A3_was_zero 0
    [
        A3 was zero
        [-]
        = A0 A1 A2 A3 | p0 p1 | `0 0
        copy A2
        <<<<[>>>>+>+<<<<<-]>>>>
        = A0 A1 0 A3_dec | p0 p1 | `A2 A2
        -
        = A0 A1 0 A3_dec | p0 p1 | `A2_dec A2
        [<<<<+>>>>-]
        = A0 A1 A2_dec A3_dec | p0 p1 | `0 A2
        check_if_zero{ +>[<[-]>[-]]< }
        = A0 A1 A2_dec A3_dec | p0 p1 | `A2_was_zero 0
        [
            A2 was zero
            [-]
            = A0 A1 A2 A3 | p0 p1 | `0 0
            copy A1
            <<<<<[>>>>>+>+<<<<<<-]>>>>>
            = A0 0 A2_dec A3_dec | p0 p1 | `A1 A1
            -
            = A0 0 A2_dec A3_dec | p0 p1 | `A1_dec A1
            [<<<<<+>>>>>-]
            = A0 A1_dec A2_dec A3_dec | p0 p1 | `0 A1
            check_if_zero{ +>[<[-]>[-]]< }
            = A0 A1_dec A2_dec A3_dec | p0 p1 | `A1_was_zero 0
            [
                A1 was zero
                [-]
                = A0 A1_dec A2_dec A3_dec | p0 p1 | `0 0
                <<<<<<
                = `A0 A1_dec A2_dec A3_dec | p0 p1 | 0 0
                -
                = `A0_dec A1_dec A2_dec A3_dec | p0 p1 | 0 0
                >>>>>>
                = A0_dec A1_dec A2_dec A3_dec | p0 p1 | `0 0
            ]
        ]
    ]
    <<<<<<
    = `B0 B1 B2 B3 | p0 p1 | 0 turned_over
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: can decrement 1
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 3
>>>+++<<<
= `0 0 0 3 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 2 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 256
>>+<<
= `0 0 1 0 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `0 0 0 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 4294967295
->->->-<<<
= `255 255 255 255 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `255 255 255 254 | 0 0 | 0 0
[-]>[-]>[-]>[-]<<<

TEST: can decrement 0
= `0 0 0 0 | 0 0 | 0 0
sub_1{
    >>>[>>>+>+<<<<-]>>>-[<<<+>>>-]+>[<[-]>[-]]<[[-]<<<<[>>>>+>+<<<<<-]>>>>-[<<<<+>>>
    >-]+>[<[-]>[-]]<[[-]<<<<<[>>>>>+>+<<<<<<-]>>>>>-[<<<<<+>>>>>-]+>[<[-]>[-]]<[[-]<
    <<<<<->>>>>>]]]<<<<<<
}
= `255 255 255 255 | 0 0 | 0 0
[-]>[-]>[-]>[-]>>>>[-]<<<<<<<

multiplies two unsigned 1 cell numbers resulting in a 2 cell number with no possibility of overflow
uses two cells of the next word and does not use the padding
mul_chars_into_short{
    = `A B 0 0 | p0 p1 | 0 0
    stash B and A in the next word for safe keeping
    [>>>>>>+<<<<<<-]>
    [>>>>>>+<<<<<<-]>>>>>>
    = 0 0 0 0 | p0 p1 | A `B
    [ for each 1 in B add A to the accumulator
        = X0 X1 0 0 | p0 p1 | A `B
        copy A
        <[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>
        = X0 X1 0 `A | p0 p1 | A B
        [ for each 1 in A add 1 with potential carry to X
            = X0 X1 0 `A_remaining | p0 p1 | A B
            increment X1 and X0
            <<+<+>
            = X0_inc `X1_inc 0 A_remaining | p0 p1 | A B
            decrement X0 if X1 is not now 0
            [<->[>+<-]]
            = X0 `0 X1_inc A_remaining | p0 p1 | A B
            put X1 back and decrement A
            >[<+>-]>-
            = X0 X1 0 `A_dec | p0 p1 | A B
        ]
        = X0 X1 0 `0 | p0 p1 | A B
        decrement B
        >>>>-
        = X0 X1 0 0 | p0 p1 | A `B_dec
    ]
    = X0 X1 0 0 | p0 p1 | A `0
    <[-]<<<<<<
    = `X0 X1 0 0 | p0 p1 | 0 0
}

= ~

TEST: 2 * 3 = 6
++>+++<
= `2 3 0 0 | 0 0 | 0 0
mul_chars_into_short{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
    ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
}
= `0 6 0 0 | 0 0 | 0 0
[-]>[-]<

TEST: 243 * 6 = 1458
---------- --- > ++++++ <
= `243 6 0 0 | 0 0 | 0 0
mul_chars_into_short{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
    ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
}
= `5 178 0 0 | 0 0 | 0 0
[-]>[-]<

multiply two words
works on both signed and unsigned ints; does not touch the padding
mul{
    we unfortunately need 6 (yes 6!) words including the two input words:
    * accumulator
    * 2 for the add
    * one to keep track of things
    * A
    * B
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    set up counter
    >>>>>> >>>>>> >>>>>> >>>>>> >>>>>> ++++
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `4 0 0 0
    [ for Ac in 4 to 0
        start by decrementing so Ac is 0 on the last iteration
        -
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac_dec 0 0 0
        >++++<
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 4 0 0
        Set Bc to 4 minus Ac
        [>->+<<-]>>[<<+>>-]<<
        = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac Bc 0 0
        <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
        [>>>>>> >>>>>> >>>>>> >>>>>> >>>>>> >> + << <<<<<< <<<<<< <<<<<< <<<<<< <<<<<< -]
        >>>>>> >>>>>> >>>>>> >>>>>> >>>>>> >
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc A0 0
        [ for Bc in Ac to 0
            start by decrementing so Bc is 0 on the last iteration
            -
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc_dec A0 0
            copy B
            < <<<<<< <<<<<< <<<<<< <<<<<<
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]>
            [>>>>>> >>>>>> + >>>>>> + <<<<<< <<<<<< <<<<<< -]
            = 0 A1 A2 A3 | 0 0 | 0 0 0 `0 | 0 0 | R0 R1 R2 R3 | 0 0 | B0 B1 B2 B3 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            >>> >>>>>>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]>
            [<<<<<< <<<<<< + >>>>>> >>>>>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `0 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            copy Bc
            >>> >>>>>> > [>>+<<< <<<<<< <<< + >>> >>>>>> > -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 Bc | 0 0 | B0 B1 B2 B3 | 0 0 | Ac `0 A0 Bc
            >> [<<+>>-] <<< <<<<<< <<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `Bc | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            [ for every 1 in Bc
                >>>
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 _Bc | 0 0 | `B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
                shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 _Bc | 0 0 | `0 B0 B1 B2 | 0 0 | Ac Bc A0 0
                <<<-
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `Bc_dec | 0 0 | 0 B0 B1 B2 | 0 0 | Ac Bc A0 0
                = ~
            ]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 `0 | 0 0 | B0 B1 B2 B3 | 0 0 | Ac Bc A0 0
            clear out all but the right most digit of B
            >>>[-]>[-]>[-]>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 `B3 | 0 0 | Ac Bc A0 0
            [<<< <<<<<< + >>>>>> >>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 0 0 0 | 0 0 | 0 0 0 `0 | 0 0 | Ac Bc A0 0
            copy A0
            >>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc `A0 0
            [>+<<< <<<<<< <<<<< + >>>>> >>>>>> >> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | B3 A0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc `0 A0
            >[<+>-]<<< <<<<<< <<<<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `B3 A0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            tests time out here lol
            = ~
            mul_chars_into_short{
                [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<
                ->[>+<-]]>[<+>-]>-]>>>>-]<[-]<<<<<<
            }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X2 X3 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
            word/shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `0 0 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            >>>>>> >>>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | `Ac Bc A0 0
            copy Ac and Bc into the same cell
            [<<< + <<< + >>>>>> -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | Ac 0 0 Ac | 0 0 | `0 Bc A0 0
            <<<[>>>+<<<-]>>>>
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | Ac 0 0 0 | 0 0 | Ac `Bc A0 0
            [<<<< + <<< + >>>>>> > -]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | c_sum 0 0 Bc | 0 0 | Ac `0 A0 0
            <<<<[>>>>+<<<<-]<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 X2 X3 | 0 0 | `c_sum 0 0 0 | 0 0 | Ac Bc A0 0
            [ for every 1 in c_sum
                <<<<<<
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X0 X1 X2 X3 | 0 0 | c_sum 0 0 0 | 0 0 | Ac Bc A0 0
                word/shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | `X1 X2 X3 0 | 0 0 | c_sum 0 0 0 | 0 0 | Ac Bc A0 0
                >>>>>>-
                = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | X1 X2 X3 0 | 0 0 | `c_sum_dec 0 0 0 | 0 0 | Ac Bc A0 0
                = ~
            ]
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | X0 X1 X2 X3 | 0 0 | `0 0 0 0 | 0 0 | Ac Bc A0 0
            <<<<<< <<<<<<
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | `R0 R1 R2 R3 | 0 0 | X0 X1 X2 X3 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            add{
                >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
                +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
                <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
                >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
            }
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | `_R0 _R1 _R2 _R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac Bc A0 0
            >>>>>> >>>>>> >>>>>> >
            = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `Bc A0 0
        ]
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac `0 A0 0
        >[-]<<
        = 0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 0 0 0
        <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
        = `0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac 0 0 0
        word/shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
        = `A1 A2 A3 0 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | Ac 0 0 0
        >>>>>> >>>>>> >>>>>> >>>>>> >>>>>>
        = _A1 _A2 _A3 0 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `Ac 0 0 0
        Ac gets decremented at the start of the loop
    ]
    = A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `0 0 0 0
    <<<<<< <<<<<< <<<<<< <<<<<< <<<<<<
    = `A0 A1 A2 A3 | 0 0 | B0 B1 B2 B3 | 0 0 | R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    [-]>[-]>[-]>[-]>>>[-]>[-]>[-]>[-]>>>
    = 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | `R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    = `R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}mul

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 0 * 0 = 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<
    <<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[
    >>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>
    +<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<
    <>>>>>>>>>>>>>>>>>>>]>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-
    ]<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]
    >>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+
    >>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>
    >>-]<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 1 * 1 = 1
>>>+>>>>>>+<<<<<< <<<
= `0 0 0 1 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<
    <<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[
    >>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>
    +<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<
    <>>>>>>>>>>>>>>>>>>>]>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-
    ]<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]
    >>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+
    >>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>
    >>-]<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 5 * 8 = 40
>>> +++++ >>>>>> ++++++++ <<<<<< <<<
= `0 0 0 5 | 0 0 | 0 0 0 8 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<
    <<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[
    >>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>
    +<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<
    <>>>>>>>>>>>>>>>>>>>]>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-
    ]<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]
    >>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+
    >>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>
    >>-]<<<<<<<<<
}
= `0 0 0 40 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 250 * 5 = 1250
>>> ------ >>>>>> +++++ <<<<<< <<<
= `0 0 0 250 | 0 0 | 0 0 0 5 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<
    <<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[
    >>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>
    +<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<
    <>>>>>>>>>>>>>>>>>>>]>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-
    ]<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]
    >>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+
    >>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>
    >>-]<<<<<<<<<
}
= `0 0 4 226 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 67501824 * 4261478406 = 388233728
++++ > +++++ > - >>>> -- > + >> ++++++ <<<<<< <<<
= `4 5 255 0 | 0 0 | 254 1 0 6 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul{
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++[->++++<[>->+<<-]>>[<<+>>-]<<<<<<<<<<<<<<<<<<<
    <<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
    ]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>+>>>>>>+
    <<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>
    >>>+<<<<<<<<<<<<<<<<<<-]>[>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<-]>>>>>>>>>[<<<<
    <<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>[<<<<<<<<<<<<+>>>>>>>>>>>>-
    ]>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>>>>>>>>[>>+<<<<<<<<<<<<+>>>>>>>>>>-]>>[<<+>>-]<
    <<<<<<<<<<<[>>>>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<-]>>>[-]>[-]>[-]>[<<<<<<<<<+>>>>>>>
    >>-]>>>>>[>+<<<<<<<<<<<<<<+>>>>>>>>>>>>>-]>[<+>-]<<<<<<<<<<<<<<<[>>>>>>+<<<<<<-]
    >[>>>>>>+<<<<<<-]>>>>>>[<[<<<+<+>>>>-]<<<<[>>>>+<<<<-]>[<<+<+>[<->[>+<-]]>[<+>-]
    >-]>>>>-]<[-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>
    >>>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<<+>>>>>>>-]<<<<[>>>>+<<<<-]<<<[<<
    <<<<[-]>[<+>-]>[<+>-]>[<+>-]<<<>>>>>>-]<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<
    <<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[
    >>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>
    +<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<
    <>>>>>>>>>>>>>>>>>>>]>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[<+>-]>[<+>-]>[<+>-
    ]<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]>[-]>[-]>[-]
    >>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+
    >>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>
    >>-]<<<<<<<<<
}
= `23 35 250 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

a wrapper around subtracting the given number from 0
mul_neg_1{
    = `A0 A1 A2 A3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
    word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
    = 0 0 0 0 | 0 0 | `A0 A1 A2 A3 | 0 0 | 0 0 0 0
    <<<<<<
    = `0 0 0 0 | 0 0 | A0 A1 A2 A3 | 0 0 | 0 0 0 0
    sub{
        >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
        [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
        <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
        >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
    }
    = `R0 R1 R2 R3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
}

= ~

TEST: 0 mul neg 1 = 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul_neg_1{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: 772 mul neg 1 = 4294966524
>>+++>++++<<<
= `0 0 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
mul_neg_1{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `255 255 252 252 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
[-]>[-]>[-]>[-]<<<

Results in 1 if a signed character is negative (greater than or equal to 128)
Applied to the most significant character of an int to check if the whole int is negative
is_char_neg{
    = `C 0 0 0
    copy C
    [>+>+<<-]>>[<<+>>-]<<
    = `C C 0 0
    A goes down; B goes up
    = `A B 0 0
    Loop until A is 0
    [
        = `A B 0 0
        ->+>>+<<
        = A_dec `B_inc 0 1
        = A     `B     0 1
        [
            If B
            [>+<-]>>[-]<<
            = A `0 B 0
        ]
        = A `0 B B_eq_0
        >[<+>-]>
        = A B 0 `B_eq_0
        [<+<<[-]>>>[-]]<<<
        = `A_if_B B B_hit_0 0
        = ~
    ]
    = `0 B B_hit_0 0
    >[-]>[<<+>>-]<<
    = `B_hit_0 0 0 0
}

= ~

TEST: is_char_neg 1
+
= `1 0 0 0
is_char_neg{
    [>+>+<<-]>>[<<+>>-]<<[->+>>+<<[[>+<-]>>[-]<<]>[<+>-]>[<+<<[-]>>>[-]]<<<]>[-]>[<<
    +>>-]<<
}
= `0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: is_char_neg 12
++++++ ++++++
= `12 0 0 0
is_char_neg{
    [>+>+<<-]>>[<<+>>-]<<[->+>>+<<[[>+<-]>>[-]<<]>[<+>-]>[<+<<[-]>>>[-]]<<<]>[-]>[<<
    +>>-]<<
}
= `0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: is_char_neg 0
= `0 0 0 0
is_char_neg{
    [>+>+<<-]>>[<<+>>-]<<[->+>>+<<[[>+<-]>>[-]<<]>[<+>-]>[<+<<[-]>>>[-]]<<<]>[-]>[<<
    +>>-]<<
}
= `0 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: is_char_neg 255
-
= `255 0 0 0
is_char_neg{
    [>+>+<<-]>>[<<+>>-]<<[->+>>+<<[[>+<-]>>[-]<<]>[<+>-]>[<+<<[-]>>>[-]]<<<]>[-]>[<<
    +>>-]<<
}
= `1 0 0 0
[-]>[-]>[-]>[-]<<<

TEST: is_char_neg 128
++++++++[>++++++++<-]>[<++>-]<
= `128 0 0 0
is_char_neg{
    [>+>+<<-]>>[<<+>>-]<<[->+>>+<<[[>+<-]>>[-]<<]>[<+>-]>[<+<<[-]>>>[-]]<<<]>[-]>[<<
    +>>-]<<
}
= `1 0 0 0
[-]>[-]>[-]>[-]<<<

Divide the first unsigned int by the second unsigned int
Uses four words and the left padding cells
= `A0 A1 A2 A3 | 0 * | B0 B1 B2 B3 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
div_unsigned{
    shift the divider left until the most significant cell is nonzero; keep track of number of shifts
    >>>>>>>> >> -
    = A0 A1 A2 A3 | 0 * | B0 B1 B2 B3 | `255 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
    [
        Clear keep_shifting if B is zero
        = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `keep_shifting * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
        <<<<[>>>>[-]>>+<<<<<<-]
        = A0 A1 A2 A3 | shifts * | `0 B1 B2 B3 | B0_is_0 * | B0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
        >>>>>>[<<<<<<+>>>>>>-]<<
        = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `B0_is_0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
        [
            If B0 is 0
            Decrement keep_shifting so it eventually hits 0 even in case of divide by 0
            -
            = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `keep_shifting * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
            [>>+<<-]
            = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `0 * | keep_shifting 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
            Increment shifts
            <<<<<<+
            = A0 A1 A2 A3 | `shifts_inc * | B0 B1 B2 B3 | 0 * | keep_shifting 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
            Perferm the shift
            >>
            word/shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
            = A0 A1 A2 A3 | shifts_inc * | `B1 B2 B3 0 | 0 * | keep_shifting 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
            >>>>
            = A0 A1 A2 A3 | shifts_inc * | B1_ B2_ B3_ 0 | `0 * | keep_shifting 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
        ]
        = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `0 * | keep_shifting 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
        >>[<<+>>-]<<
        = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `keep_shifting * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
    ]
    = A0 A1 A2 A3 | shifts * | B0 B1 B2 B3 | `0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
    Number of division iterations is shifts plus 1
    <<<<<<+
    = A0 A1 A2 A3 | `iters * | B0 B1 B2 B3 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
    Move B right two words for safe keeping
    >>
    move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
    move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
    <<<<<< <<<<<< <<
    = A0 A1 A2 A3 | `iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | 0 0 0 0
    For each iter
    [
        = A0 A1 A2 A3 | `iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0_ R1_ R2_ R3_
        Left shift R
        >> >>>>>> >>>>>> >>>>>>
        word/shift_left{ [-]>[<+>-]>[<+>-]>[<+>-]<<< }
        = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | `R1_ R2_ R3_ 0
        <<<<<< <<<<<< +
        = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | `1 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3

        Until A sub B overflows (subtraction loop)
        [
            = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | `!0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
            Increment R3
            [-]>>>>>> >>>>>> >>> +
            = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 `R3_inc
            Copy B into place
            <<< <<<<<<
            word/copy_left{
                [<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-
                ]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>>
            }
            <<<<<<
            word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
            <<<<<<
            = `A0 A1 A2 A3 | iters * | B0 B1 B2 B3 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
            sub_with_overflow{
                >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
                [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
                <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
                >>>>>-]>>>-]<
            }
            = A0_ A1_ A2_ A3_ | iters * | 0 0 0 0 | 0 * | 0 0 `overflow 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
            <<+>>[<<[-]>>[-]]<<
            = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | `did_not_overflow 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
        ]
        = A0_ A1_ A2_ A3 | iters * | 0 0 0 0 | 0 * | `0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3

        First undo the last iteration of the subtraction loop
        Decrement R3
        >>>>>> >>>>>> >>> -
        = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 `R3_dec
        Copy B into place
        <<< <<<<<<
        word/copy_left{
            [<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-
            ]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>>
        }
        <<<<<<
        word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
        <<<<<<
        = `A0 A1 A2 A3 | iters * | B0 B1 B2 B3 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
        Add B back to A
        add_old{
            >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]<+>>
            +<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>[-]<[>+<-]
            <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
            >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
        }
        = `A0_ A1_ A2_ A3_ | iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
        The last iteration of the subtraction loop has been undone

        Shift the divider right
        >>>>>> >>>>>> >>>>>>
        shift_right{ >>>[-]<[>+<-]<[>+<-]<[>+<-] }
        = A0 A1 A2 A3 | iters * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | `0 B0 B1 B2 | 0 * | R0 R1 R2 R3
        Decrement iters
        <<<<<< <<<<<< <<-
        = A0 A1 A2 A3 | `iters_dec * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 B0_ B1_ B2_ | 0 * | R0 R1 R2 R3
    ]
    = A0 A1 A2 A3 | `0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | B0 B1 B2 B3 | 0 * | R0 R1 R2 R3
    >> >>>>>> >>>>>> [-]>[-]>[-]>[-] >>>
    = A0 A1 A2 A3 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | `R0 R1 R2 R3
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    word/move_left{ [<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<< }
    <<<<<<
    = `A0 A1 A2 A3 | 0 * | R0 R1 R2 R3 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0 | 0 * | 0 0 0 0
    A now holds the remainder and R the quotent
}div_unsigned

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 0 div 3
>>>>>> >>> +++ <<< <<<<<<
= `0 0 0 0 | 0 0 | 0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 3 div 3
>>> +++ >>>>>> +++ <<<<<< <<<
= `0 0 0 3 | 0 0 | 0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 12 div 4
>>> ++++ ++++ ++++ >>>>>> ++++ <<<<<< <<<
= `0 0 0 12 | 0 0 | 0 0 0 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 3 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 21 div 5
>>> +++++ +++++ +++++ +++++ + >>>>>> +++++ <<<<<< <<<
= `0 0 0 21 | 0 0 | 0 0 0 5 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 459524 div 3073
> +++++++ > +++ > ++++ >>>>> ++++ ++++ ++++ > + <<<<<< <<<
= `0 7 3 4 | 0 0 | 0 0 12 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 6 111 | 0 0 | 0 0 0 149 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: 459524 div 7
> +++++++ > +++ > ++++ >>>>>> +++++++ <<<<<< <<<
= `0 7 3 4 | 0 0 | 0 0 0 7 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 0 0 2 | 0 0 | 0 1 0 110 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: divide by zero does nothing
> +++++++ > +++ > ++++ <<<
= `0 7 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
div_unsigned{
    >>>>>>>>>>-[<<<<[>>>>[-]>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<[-[>>+<<-]<<<<<<+>>[-
    ]>[<+>-]>[<+>-]>[<+>-]<<<>>>>]>>[<<+>>-]<<]<<<<<<+>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<
    <<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>
    >>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>[-]>[<+>-]>[<
    +>-]>[<+>-]<<<<<<<<<<<<<<<+[[-]>>>>>>>>>>>>>>>+<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<
    <-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<-]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<
    <<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]>><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<
    <<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>
    >>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<
    <[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>
    +<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]>>>-]<<<+>>[<<[-]>>[-]]<<]>>>
    >>>>>>>>>>>>-<<<<<<<<<[<<+<<<<+>>>>>>-]<<[>>+<<-]>>>[<<<+<<<+>>>>>>-]<<<[>>>+<<<
    -]>>>>[<<<<+<<+>>>>>>-]<<<<[>>>>+<<<<-]>>>>>[<<<<<+<+>>>>>>-]<<<<<[>>>>>+<<<<<-]
    >><<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<
    <<<<<<<<<<>>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-
    ]<[[-]<+>>+<<[>>-<<[>+<-]]>[<+>-]]<<<<[>>>+>>+<<[>>-<<[>+<-]]>[<+>-]<<<<-]<<<>>>
    [-]<[>+<-]<[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<
    <<+>>>>>>>>>>>>-]>>>-]<[-]<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>[-]<[>+<-]<[>+<-]<[
    >+<-]<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>[-]>[-]>[-]>[-]>>>[<<<<<<+>>>>>>-]>[<<<<<<+>>
    >>>>-]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>
    -]>[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<[<<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]>[
    <<<<<<+>>>>>>-]>[<<<<<<+>>>>>>-]<<<<<<<<<<<<<<<
}
= `0 7 3 4 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

negate_{
    = `A0 A1 A2 A3 | * * | 0 0 0 0
    +[>>>>>>-<<<<<<-]
    = `0 A1 A2 A3 | * * | N0 0 0 0
    >>>>>>[<<<<<<+>>>>>>-]<<<<<
    = N0 `A1 A2 A3 | * * | 0 0 0 0
    +[>>>>>-<<<<<-]
    = N0 `0 A2 A3 | * * | N1 0 0 0
    >>>>>[<<<<<+>>>>>-]<<<<
    = N0 N1 `A2 A3 | * * | 0 0 0 0
    +[>>>>-<<<<-]
    = N0 N1 `0 A3 | * * | N2 0 0 0
    >>>>[<<<<+>>>>-]<<<
    = N0 N1 N2 `A3 | * * | 0 0 0 0
    note that unlike for the other digits here we don't increment
    [>>>-<<<-]
    = N0 N1 N2 `0 | * * | N3 0 0 0
    >>>[<<<+>>>-]<<<<<<
    = `N0 N1 N2 N3 | * * | 0 0 0 0
}

multiplies by negative 1; does not touch the padding
negate{
    = `A0 A1 A2 A3 | * * | 0 0 0 0
    word/move_right{ [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>> }
    <<<<<<
    = `0 0 0 0 | * * | A0 A1 A2 A3 | * * | 0 0 0 0
    sub{
        >>>>>>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<
        [>>-<<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]
        <[>+<-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>
        >>>>>-]>>>-]<[-]<<<<<<<<<<<<<<
    }
    = `N0 N1 N2 N3 | * * | 0 0 0 0 | * * | 0 0 0 0
}

= ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }

TEST: negate 0
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate 1
>>>+<<<
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `255 255 255 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate 255
>>>-<<<
= `0 0 0 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `255 255 255 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate 256
>>+<<
= `0 0 1 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `255 255 255 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate 257
>>+>+<<<
= `0 0 1 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `255 255 254 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate neg 256
->->-<<
= `255 255 255 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 1 0 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate 33423615
+>-->>-<<<
= `1 254 0 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `254 1 255 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate neg 1
->->->-<<<
= `255 255 255 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `0 0 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~

TEST: negate neg 16842750
-->->>+<<<
= `254 255 0 1 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0
negate{
    [>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>[>>>>>>+<<<<<<-]>>><<<<<<>>>>
    >>>>>>>>>>>++++[<<<<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>>[<+>-]<[[-]>+<<[>>-
    <<[>+<-]]>[<+>-]<->]<<<<[>>>>>+<<[>>-<<[>+<-]]>[<+>-]<-<<<-]<<<>>>[-]<[>+<-]<[>+
    <-]<[>+<-]<<<<<<>>>[-]<[>+<-]<[>+<-]<[>+<-]>>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>
    >-]>>>-]<[-]<<<<<<<<<<<<<<
}
= `1 0 255 255 | 0 0 | 0 0 0 0 | 0 0 | 0 0 0 0 ~
test_helpers/clear{ [-]->[-]>[-]>[-]++++++[<++++++[<++++++>-]>-]<<[>[-]<[>+<-]>-]+[[-]<+] }
= ~
